# this allows you to call directives such as "env" in your own conf files
# http://nginx.org/en/docs/ngx_core_module.html#env
#
# and load dynamic modules via load_module
# http://nginx.org/en/docs/ngx_core_module.html#load_module

# 加载动态模块
load_module /usr/lib/nginx/modules/ngx_http_image_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_geoip_module.so;
load_module /usr/lib/nginx/modules/ngx_stream_geoip_module.so;

include /etc/nginx/main.d/*.conf;

user nginx;
worker_processes auto;
worker_cpu_affinity auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# 工作进程限制
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Lua配置
    lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/share/luajit-2.1.0-beta3/?.lua;;";
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;";

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式优化
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=16k;

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    reset_timedout_connection on;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # 临时文件路径
    client_body_temp_path /var/cache/nginx/client_temp;
    proxy_temp_path /var/cache/nginx/proxy_temp;
    fastcgi_temp_path /var/cache/nginx/fastcgi_temp;
    uwsgi_temp_path /var/cache/nginx/uwsgi_temp;
    scgi_temp_path /var/cache/nginx/scgi_temp;

    # 缓冲区优化
    client_body_buffer_size 16k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 8k;

    # prevent clickjacking attacks
    more_set_headers 'X-Frame-Options: SAMEORIGIN';

    # help to prevent cross-site scripting exploits
    more_set_headers 'X-XSS-Protection: 1; mode=block';

    # help to prevent Cross-Site Scripting (XSS) and data injection attacks
    # https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
    more_set_headers "Content-Security-Policy: object-src 'none'; frame-ancestors 'self'; form-action 'self'; block-all-mixed-content; sandbox allow-forms allow-same-origin allow-scripts allow-popups allow-downloads; base-uri 'self';";

    # 包含缓存路径配置
    include /etc/nginx/conf.d/cache_paths.conf;

    # 包含其他配置
    include /etc/nginx/conf.d/gzip.conf;
    include /etc/nginx/conf.d/security_headers.conf;
    include /etc/nginx/conf.d/cache.conf;
    include /etc/nginx/conf.d/proxy.conf;
    include /etc/nginx/conf.d/rate_limit.conf;

    # 包含服务器配置
    include /etc/nginx/conf.d/servers/*.conf;
}

